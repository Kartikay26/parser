<Grammar G (E)>
	Start : (0) Start -> E
	E : (1) E -> E + T | (2) E -> T
	T : (3) T -> T * F | (4) T -> F
	F : (5) F -> ( E ) | (6) F -> id

Item Sets:
<ItemSet #0>
	(0) Start -> . E
	(1) E -> . E + T
	(2) E -> . T
	(3) T -> . T * F
	(4) T -> . F
	(5) F -> . ( E )
	(6) F -> . id

<ItemSet #1>
	(0) Start -> E . 
	(1) E -> E . + T

<ItemSet #2>
	(2) E -> T . 
	(3) T -> T . * F

<ItemSet #3>
	(4) T -> F . 

<ItemSet #4>
	(5) F -> ( . E )
	(1) E -> . E + T
	(2) E -> . T
	(3) T -> . T * F
	(4) T -> . F
	(5) F -> . ( E )
	(6) F -> . id

<ItemSet #5>
	(6) F -> id . 

<ItemSet #6>
	(1) E -> E + . T
	(3) T -> . T * F
	(4) T -> . F
	(5) F -> . ( E )
	(6) F -> . id

<ItemSet #7>
	(3) T -> T * . F
	(5) F -> . ( E )
	(6) F -> . id

<ItemSet #8>
	(5) F -> ( E . )
	(1) E -> E . + T

<ItemSet #9>
	(1) E -> E + T . 
	(3) T -> T . * F

<ItemSet #10>
	(3) T -> T * F . 

<ItemSet #11>
	(5) F -> ( E ) . 


Goto:
{(0, F): 3,
 (0, E): 1,
 (0, T): 2,
 (4, T): 2,
 (4, E): 8,
 (4, F): 3,
 (6, T): 9,
 (6, F): 3,
 (7, F): 10}

Actions:
{(0, (): ('shift', 4),
 (0, id): ('shift', 5),
 (1, $): ('accept',),
 (2, +): ('reduce', 2),
 (2, *): ('reduce', 2),
 (2, (): ('reduce', 2),
 (2, )): ('reduce', 2),
 (2, id): ('reduce', 2),
 (2, $): ('reduce', 2),
 (3, +): ('reduce', 4),
 (3, *): ('reduce', 4),
 (3, (): ('reduce', 4),
 (3, )): ('reduce', 4),
 (3, id): ('reduce', 4),
 (3, $): ('reduce', 4),
 (4, (): ('shift', 4),
 (4, id): ('shift', 5),
 (5, +): ('reduce', 6),
 (5, *): ('reduce', 6),
 (5, (): ('reduce', 6),
 (5, )): ('reduce', 6),
 (5, id): ('reduce', 6),
 (5, $): ('reduce', 6),
 (6, (): ('shift', 4),
 (6, id): ('shift', 5),
 (7, (): ('shift', 4),
 (7, id): ('shift', 5),
 (8, +): ('shift', 6),
 (8, )): ('shift', 11),
 (9, +): ('reduce', 1),
 (9, *): ('reduce', 1),
 (9, (): ('reduce', 1),
 (9, )): ('reduce', 1),
 (9, id): ('reduce', 1),
 (9, $): ('reduce', 1),
 (10, $): ('reduce', 3),
 (10, +): ('reduce', 3),
 (10, *): ('reduce', 3),
 (10, (): ('reduce', 3),
 (10, )): ('reduce', 3),
 (10, id): ('reduce', 3),
 (11, +): ('reduce', 5),
 (11, *): ('reduce', 5),
 (11, (): ('reduce', 5),
 (11, )): ('reduce', 5),
 (11, id): ('reduce', 5),
 (11, $): ('reduce', 5)}

. id + id * ( id + id + id )
shift 5
id . + id * ( id + id + id )
reduce 6
F . + id * ( id + id + id )
reduce 4
T . + id * ( id + id + id )
reduce 2
E . + id * ( id + id + id )
Traceback (most recent call last):
  File "lr0.py", line 38, in <module>
    main()
  File "lr0.py", line 32, in main
    p_tree = parse(tokens, gotos, actions, g)
  File "/home/st0rmbring3r/Desktop/parser/lr0_parser.py", line 171, in parse
    raise RuntimeError("Syntax error at input position: %d" % dot)
RuntimeError: Syntax error at input position: 1
