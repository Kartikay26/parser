<Grammar G (S)>
	Start : (0) Start -> S
	S : (1) S -> B B
	B : (2) B -> a B | (3) B -> c

Item Sets:
<ItemSet #0>
	(0) Start -> . S
	(1) S -> . B B
	(2) B -> . a B
	(3) B -> . c

<ItemSet #1>
	(0) Start -> S . 

<ItemSet #2>
	(1) S -> B . B
	(2) B -> . a B
	(3) B -> . c

<ItemSet #3>
	(2) B -> a . B
	(2) B -> . a B
	(3) B -> . c

<ItemSet #4>
	(3) B -> c . 

<ItemSet #5>
	(1) S -> B B . 

<ItemSet #6>
	(2) B -> a B . 


Goto:
{(0, B): 2, (0, S): 1, (2, B): 5, (3, B): 6}

Actions:
{(0, a): ('shift', 3),
 (0, c): ('shift', 4),
 (1, $): ('accept',),
 (2, a): ('shift', 3),
 (2, c): ('shift', 4),
 (3, a): ('shift', 3),
 (3, c): ('shift', 4),
 (4, a): ('reduce', 3),
 (4, c): ('reduce', 3),
 (4, $): ('reduce', 3),
 (5, a): ('reduce', 1),
 (5, c): ('reduce', 1),
 (5, $): ('reduce', 1),
 (6, a): ('reduce', 2),
 (6, c): ('reduce', 2),
 (6, $): ('reduce', 2)}

[a, a, a, c, a, a, c, $]

::: [., a, a, a, c, a, a, c, $]
0 a
('shift', 3)
[a]
[0, 3]

::: [a, ., a, a, c, a, a, c, $]
3 a
('shift', 3)
[a, a]
[0, 3, 3]

::: [a, a, ., a, c, a, a, c, $]
3 a
('shift', 3)
[a, a, a]
[0, 3, 3, 3]

::: [a, a, a, ., c, a, a, c, $]
3 c
('shift', 4)
[a, a, a, c]
[0, 3, 3, 3, 4]

::: [a, a, a, c, ., a, a, c, $]
4 a
('reduce', 3)
(3) B -> c
[a, a, a, B]
[0, 3, 3, 3, 6]

::: [a, a, a, B, ., a, a, c, $]
6 a
('reduce', 2)
(2) B -> a B
[a, a, B]
[0, 3, 3, 6]

::: [a, a, B, ., a, a, c, $]
6 a
('reduce', 2)
(2) B -> a B
[a, B]
[0, 3, 6]

::: [a, B, ., a, a, c, $]
6 a
('reduce', 2)
(2) B -> a B
[B]
[0, 2]

::: [B, ., a, a, c, $]
2 a
('shift', 3)
[B, a]
[0, 2, 3]

::: [B, a, ., a, c, $]
3 a
('shift', 3)
[B, a, a]
[0, 2, 3, 3]

::: [B, a, a, ., c, $]
3 c
('shift', 4)
[B, a, a, c]
[0, 2, 3, 3, 4]

::: [B, a, a, c, ., $]
4 $
('reduce', 3)
(3) B -> c
[B, a, a, B]
[0, 2, 3, 3, 6]

::: [B, a, a, B, ., $]
6 $
('reduce', 2)
(2) B -> a B
[B, a, B]
[0, 2, 3, 6]

::: [B, a, B, ., $]
6 $
('reduce', 2)
(2) B -> a B
[B, B]
[0, 2, 5]

::: [B, B, ., $]
5 $
('reduce', 1)
(1) S -> B B
[S]
[0, 1]

::: [S, ., $]
1 $
('accept',)
